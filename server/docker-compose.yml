version: '3.9'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
#    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      ZOOKEEPER_SASL_ENABLED: 'false'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://192.168.1.113:9092, SASL_PLAINTEXT://192.168.1.113:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT, SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/configs/kafka_server_jaas.conf"
    volumes:
     - ./configs:/etc/kafka/configs

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    hostname: kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"

  kafka-topics-ui:
    image: landoop/kafka-topics-ui:latest
    ports:
      - "9080:8000"
    environment:
      - PROXY=true
      - PROXY_SKIP_VERIFY=true
      - KAFKA_REST_PROXY_URL=http://192.168.1.113:9092

  control-center:
    image: confluentinc/cp-enterprise-control-center:latest
    container_name: control-center
    depends_on:
      - kafka
    ports:
      - "9021:9021"
    environment:
      - CONTROL_CENTER_ZOOKEEPER_CONNECT=zookeeper:2181
      - CONTROL_CENTER_KAFKA_CLUSTER_ID=control-center-cluster
      - CONTROL_CENTER_BOOTSTRAP_SERVERS=kafka:9092
      - CONTROL_CENTER_CONNECT_CLUSTER=http://kafka:8083
      - CONTROL_CENTER_REPLICATION_FACTOR=1

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    ports:
      - "9001:9000"
    volumes:
      - ./var/run/docker.sock:/var/run/docker.sock
      - ./portainer_data:/data
